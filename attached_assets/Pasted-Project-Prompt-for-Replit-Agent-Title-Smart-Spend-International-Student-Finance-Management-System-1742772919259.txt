Project Prompt for Replit Agent
Title: Smart Spend – International Student Finance Management System

Objective:
Develop a web and mobile application that assists international students in managing their finances by tracking income and expenses, budgeting, financial alerts, and providing community-driven financial tips and local deals.

Key Features:
User Authentication & Security:

Secure login with email verification.

Multi-Factor Authentication (MFA) for enhanced security.

Forgot password feature with email-based password reset.

Admin Dashboard & Management:

Admin interface with user management (add/remove users, track usage).

Budget tracking and financial report generation.

System monitoring and performance tracking using Prometheus/Grafana.

Income & Expense Tracking:

Automatic income calculation based on hourly wage and weekly hours.

Expense categorization (fixed, variable, discretionary).

Spending alerts when expenses exceed predefined limits.

Budget & Financial Analysis:

Budget calculator with smart recommendations.

Visual reports for financial insights.

"Remaining Budget" feature that updates dynamically.

Alerts when budget is exceeded (email and dashboard notification).

Community Engagement Features:

Student forums for financial discussions.

Expense-saving tips from the community.

Deals section (only showing deals, no coupons) – updated by users/admin.

"Read More Resources" hover feature for additional financial tips.

Infrastructure & Performance:

Scalability: Support for 1,000+ concurrent users.

Failover & Disaster Recovery: Data backups and recovery mechanisms.

Storage: Uses SAN (Storage Area Network) with Ceph or FreeNAS.

Containerization: Deploy via Docker/Kubernetes.

Monitoring tools: Integrate Prometheus, Grafana, Zabbix for system health tracking.

UI/UX Improvements:

Background images for all pages.

Fix cursor issues in the Featured Partners section.

Technical Stack:
Frontend: React.js (Web), React Native (Mobile)

Backend: FastAPI (Python)

Authentication: Keycloak (OAuth)

Database: PostgreSQL (primary), Redis (caching)

Storage: MinIO (secure file storage)

Infrastructure: Kubernetes (orchestration), Docker (containerization)

Monitoring: Prometheus, Grafana, Zabbix

